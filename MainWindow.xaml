<Window x:Class="SoundRecorder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:soundRecorder="clr-namespace:SoundRecorder"
        xmlns:prop="clr-namespace:SoundRecorder.Properties"
        Title="{x:Static prop:Resources.Window_Title}" Height="350" Width="400" FlowDirection="LeftToRight" Icon="app-icon.ico"
        WindowStyle="None" ResizeMode="NoResize">

    <Window.Resources>
        <soundRecorder:LevelToBrushConverter x:Key="LevelToBrushConverter"/>
        <!-- Flat, borderless progress bar styles to make two halves look like a single bar -->
        <Style TargetType="ProgressBar" x:Key="AudioLevelMeterStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Value" Converter="{StaticResource LevelToBrushConverter}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid SnapsToDevicePixels="True">
                            <Border x:Name="PART_Track" Background="{TemplateBinding Background}"/>
                            <Border x:Name="PART_Indicator" Background="{TemplateBinding Foreground}" HorizontalAlignment="Left"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Mirrored indicator: fills from right edge to left (for left half) -->
        <Style TargetType="ProgressBar" x:Key="AudioLevelMeterStyleRight">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <Binding RelativeSource="{RelativeSource Self}" Path="Value" Converter="{StaticResource LevelToBrushConverter}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid SnapsToDevicePixels="True">
                            <Border x:Name="PART_Track" Background="{TemplateBinding Background}"/>
                            <Border x:Name="PART_Indicator" Background="{TemplateBinding Foreground}" HorizontalAlignment="Right"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Close Button hover style -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E81123"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#C50F1F"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Custom Title Bar -->
        <Grid x:Name="TitleBar" Grid.Row="0" Background="Transparent" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}"
                           VerticalAlignment="Center" Margin="10,0,10,0" TextTrimming="CharacterEllipsis" FlowDirection="RightToLeft" TextAlignment="Right"/>
                <Image Grid.Column="1" Width="16" Height="16" Margin="0,0,8,0" VerticalAlignment="Center"
                       Source="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}"/>
            </Grid>
            <Button x:Name="CloseButton" Grid.Column="1" Content="×" Width="46" Height="32" Click="CloseButton_Click" Style="{StaticResource CloseButtonStyle}"/>
        </Grid>

        <!-- Main Content -->
        <Grid Grid.Row="1" Margin="10" FlowDirection="RightToLeft">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="{x:Static prop:Resources.Label_Source}" Margin="5" HorizontalAlignment="Right"/>
            <ComboBox Grid.Row="0" Grid.Column="1" x:Name="SourceComboBox" Margin="5" FlowDirection="LeftToRight"/>

            <Label Grid.Row="1" Grid.Column="0" Content="{x:Static prop:Resources.Label_Genre}" Margin="5" HorizontalAlignment="Right"/>
            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="GenreComboBox" Margin="5" IsEditable="True" 
                      TextBoxBase.TextChanged="GenreComboBox_TextChanged" FlowDirection="RightToLeft"/>

            <Label Grid.Row="2" Grid.Column="0" Content="{x:Static prop:Resources.Label_Singer}" Margin="5" HorizontalAlignment="Right"/>
            <ComboBox Grid.Row="2" Grid.Column="1" x:Name="SingerComboBox" Margin="5" IsEditable="True" 
                      SelectionChanged="SingerComboBox_SelectionChanged" TextBoxBase.TextChanged="SingerComboBox_TextChanged" FlowDirection="RightToLeft"/>

            <Label Grid.Row="3" Grid.Column="0" Content="{x:Static prop:Resources.Label_Album}" Margin="5" HorizontalAlignment="Right"/>
            <ComboBox Grid.Row="3" Grid.Column="1" x:Name="AlbumComboBox" Margin="5" IsEditable="True"
                      TextBoxBase.TextChanged="AlbumComboBox_TextChanged" FlowDirection="RightToLeft"/>

            <Label Grid.Row="4" Grid.Column="0" Content="{x:Static prop:Resources.Label_FileName}" Margin="5" HorizontalAlignment="Right"/>
            <TextBox Grid.Row="4" Grid.Column="1" x:Name="FileNameTextBox" Margin="5" FlowDirection="RightToLeft"/>

            <StackPanel Grid.Row="5" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                <Button x:Name="StartButton" Content="{x:Static prop:Resources.Button_Start}" Width="100" Margin="5" Click="StartButton_Click"/>
                <Button x:Name="StopButton" Content="{x:Static prop:Resources.Button_Stop}" Width="100" Margin="5" Click="StopButton_Click" IsEnabled="False"/>
            </StackPanel>

            <TextBlock x:Name="RecordingTimeText" Grid.Row="6" Grid.ColumnSpan="2" Text="{x:Static prop:Resources.RecordingTime_Initial}" Foreground="Red" FontSize="24" HorizontalAlignment="Center" Margin="0,5,0,5"/>

            <Grid Grid.Row="7" Grid.ColumnSpan="2" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ProgressBar x:Name="AudioLevelMeter" Grid.Column="0" Margin="0" Minimum="0" Maximum="100" Height="20" Style="{StaticResource AudioLevelMeterStyleRight}"/>
                <ProgressBar x:Name="CenterRangeMeter" Grid.Column="1" Margin="0" Minimum="0" Maximum="100" Height="20" Style="{StaticResource AudioLevelMeterStyle}"/>
            </Grid>
        </Grid>
    </Grid>
</Window>